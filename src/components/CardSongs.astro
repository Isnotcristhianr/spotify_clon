---
import type { Playlist } from "@/lib/data";
import PlayIcon from "@/icons/PlayIcon.astro";

interface Props {
  playlist: Playlist;
}

const { playlist } = Astro.props;
const { id, cover, title, artists, color } = playlist;

const artistsString = artists.join(", ");
---

<article 
  class="group relative bg-zinc-900/30 hover:bg-zinc-800 shadow-lg hover:shadow-xl 
         rounded-md transition-all duration-300 w-full max-w-[320px] mx-auto"
>
  <div class="relative p-4">
    <a 
      href={`/playlist/${id}`}
      class="playlist-item transition-all duration-300 flex flex-col"
      transition:name=`playlist ${id} box`
    >
      <picture class="aspect-square w-full h-auto flex-none mb-4 relative">
        <img
          src={cover}
          alt={`Cover of ${title} by ${artistsString}`}
          class="object-cover w-full h-full rounded-md shadow-lg"
          transition:name=`playlist ${id} image`
        />
      </picture>

      <div class="flex flex-col gap-2 min-h-[60px]">
        <h4 
          class="text-white font-bold truncate text-sm sm:text-base"
          transition:name=`playlist ${id} title`
        >
          {title}
        </h4>
        <span 
          class="text-xs sm:text-sm text-gray-400 line-clamp-2"
          transition:name=`playlist ${id} artists`
        >
          {artistsString}
        </span>
      </div>
    </a>

    <button 
      class="play-button absolute right-6 bottom-[85px] p-3 text-black bg-green-500 rounded-full 
             opacity-0 translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 
             transition-all duration-300 hover:scale-105 hover:bg-green-400 shadow-xl
             sm:right-8 md:p-4"
      title={`Reproducir ${title}`}
      data-playlist-id={id}
    >
      <PlayIcon />
    </button>
  </div>
</article>

<script>
  import { usePlayerStore } from "@/store/playerStore";

  const playerStore = usePlayerStore.getState();

  document.querySelectorAll('.play-button').forEach((button) => {
    if (!(button instanceof HTMLElement)) return;

    button.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const playlistId = button.dataset.playlistId;
      if (!playlistId) return;

      playerStore.setCurrentMusic({
        playlistId,
        songId: 1,
        songs: []
      });
      playerStore.setIsPlaying(true);
    });
  });
</script>

<style>
  .play-button svg {
    width: 24px;
    height: 24px;
  }

  @media (min-width: 640px) {
    .play-button svg {
      width: 28px;
      height: 28px;
    }
  }
</style>
